services:
  vaultwarden-ts:
    image: tailscale/tailscale:stable
    container_name: vaultwarden-ts
    hostname: ${VAULTWARDEN_HOSTNAME}
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_SERVE_CONFIG: /config/vaultwarden.json
      TS_STATE_DIR: /var/lib/tailscale
    volumes:
      - ./app-config/vaultwarden-ts:/config
      - ./app-data/vaultwarden-ts:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  vaultwarden:
    image: vaultwarden/server:latest-alpine
    container_name: vaultwarden
    network_mode: service:vaultwarden-ts
    depends_on:
      - vaultwarden-ts
    restart: unless-stopped
    environment:
      DOMAIN: https://${VAULTWARDEN_HOSTNAME}.${TS_DOMAIN}
    volumes:
      - ./app-data/vaultwarden/:/data/
  portainer-ts:
    image: tailscale/tailscale:stable
    container_name: portainer-ts
    hostname: ${PORTAINER_HOSTNAME}
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_SERVE_CONFIG: /config/portainer.json
      TS_STATE_DIR: /var/lib/tailscale
    volumes:
      - ./app-config/portainer-ts:/config
      - ./app-data/portainer-ts:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    network_mode: service:portainer-ts
    depends_on:
      - portainer-ts
    restart: unless-stopped
    volumes:
      - ./app-data/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
  beszel-ts:
    image: tailscale/tailscale:stable
    container_name: beszel-ts
    hostname: ${BESZEL_HOSTNAME}
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_SERVE_CONFIG: /config/beszel.json
      TS_STATE_DIR: /var/lib/tailscale
    volumes:
      - ./app-config/beszel-ts:/config
      - ./app-data/beszel-ts:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  beszel:
    image: henrygd/beszel:latest
    container_name: beszel
    network_mode: service:beszel-ts
    depends_on:
      - beszel-ts
    restart: unless-stopped
    volumes:
      - ./app-data/beszel/data:/beszel_data
      - ./app-data/beszel/socket:/beszel_socket
  beszel-agent:
    image: henrygd/beszel-agent:latest
    container_name: beszel-agent
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./app-data/beszel/socket:/beszel_socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      LISTEN: /beszel_socket/beszel.sock
      KEY: "${BESZEL_AGENT_KEY}"
  blocky:
    image: spx01/blocky:latest
    container_name: blocky
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      - TZ=${BLOCKY_TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./app-config/blocky/config.yml:/app/config.yml:ro
  tor-proxy:
    image: leplusorg/tor:latest
    container_name: tor-proxy
    environment:
      SOCKS_HOSTNAME: 0.0.0.0
    restart: unless-stopped
    ports:
      - "9050:9050"
  bitcoin-core-ts:
    image: tailscale/tailscale:stable
    container_name: bitcoin-core-ts
    hostname: ${BITCOIN_CORE_HOSTNAME}
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_STATE_DIR: /var/lib/tailscale
    volumes:
      - ./app-data/bitcoin-core-ts:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  bitcoin-core:
    image: dobtc/bitcoin:latest
    container_name: bitcoin-core
    network_mode: service:bitcoin-core-ts
    depends_on:
      - bitcoin-core-ts
      - tor-proxy
    restart: unless-stopped
    environment:
      UID: 1000
      GID: 1000
    volumes:
      - ./app-config/bitcoin-core/bitcoin.conf:/home/bitcoin/.bitcoin/bitcoin.conf
      - ./app-data/bitcoin-core:/home/bitcoin/.bitcoin
  n8n-ts:
    image: tailscale/tailscale:stable
    container_name: n8n-ts
    hostname: ${N8N_HOSTNAME}
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_SERVE_CONFIG: /config/n8n.json
      TS_STATE_DIR: /var/lib/tailscale
    volumes:
      - ./app-config/n8n-ts:/config
      - ./app-data/n8n-ts:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    network_mode: service:n8n-ts
    depends_on:
      - n8n-ts
    restart: unless-stopped
    environment:
      GENERIC_TIMEZONE: ${N8N_GENERIC_TIMEZONE}
      TZ: ${N8N_TZ}
      N8N_RUNNERS_ENABLED: true
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
      N8N_PROTOCOL: https
      N8N_HOST: ${N8N_HOSTNAME}.${TS_DOMAIN}
      N8N_PORT: 443
      NODE_ENV: production
      WEBHOOK_URL: https://${N8N_HOSTNAME}.${TS_DOMAIN}/
    volumes:
      - ./app-data/n8n:/home/node/.n8n
